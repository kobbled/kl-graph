--header
%include header_guard.m
--oop
%include namespace.m

--start header file
header_if -- ifndef class
header_def -- define class

declare_member(class_name,clear,class_name,clr)
ROUTINE clear FROM class_name
declare_member(class_name,insert,class_name,inst)
ROUTINE insert(new_idx : INTEGER ; root : INTEGER ; data : PATH nodedata = BINARY_DATA_TYPE) : INTEGER FROM class_name
declare_member(class_name,create,class_name,crat)
ROUTINE create(start_idx : INTEGER ; data : PATH nodedata = BINARY_DATA_TYPE) FROM class_name
declare_member(class_name,sort,class_name,sort)
ROUTINE sort(data : PATH nodedata = BINARY_DATA_TYPE) FROM class_name
declare_member(class_name,balance,class_name,blnc)
ROUTINE balance FROM class_name
declare_member(class_name,new_generator,class_name,ngen)
ROUTINE new_generator(typ : INTEGER) FROM class_name
declare_member(class_name,next,class_name,next)
ROUTINE next(data : PATH nodedata = BINARY_DATA_TYPE) : BINARY_DATA_TYPE FROM class_name
declare_member(class_name,print,class_name,prnt)
ROUTINE print(typ : INTEGER; data : PATH nodedata = BINARY_DATA_TYPE) FROM class_name
declare_member(class_name,kthSmallest,class_name,ktsl)
ROUTINE kthSmallest(k : INTEGER) : INTEGER FROM class_name
declare_member(class_name,kthLargest,class_name,ktlg)
ROUTINE kthLargest(k : INTEGER) : INTEGER FROM class_name
%endif --end header